- freebeacon runs as a linux daemon
- configured via command line at start up

Beacon:

- text string "XXX" entered on command line at start up
- when we get valid sync, start parsing rx text
- on rx of "XXX", trigger tx event.
- tx starts after sync is lost for 10 seconds
- send canned, encoded speech, echoing received txt string
- then back to listen

Logging files:

- log dir entered on command line.  This could be a web server directory,
  then logged files will automatically appear on the web
- maximum nuber of audio log files entered on command line
- when we get a valid sync and txt string "XXX"
  - log rx audio to wave file in log directory
  - log decoded audio to wave file in log directory
- stop writing wave files when sync lost for 10s or after 60 seconds
- use rotating file names 0 ... 9 so we re-use storage
- optional: fire off event to another process, perhaps via a UDP port,
  this could be used to add text to a web page, (e.g. txt string)

Task List
---------

[ ] daemonise
[ ] command line parsing for 
    [ ] log dir and number of log files
    [ ] sound devices
[ ] state machine
[ ] work out how to play to sound devices, maybe portaudio?
[ ] code to key tx via rs232

