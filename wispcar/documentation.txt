documentation.txt
Created by David Rowe May 2008
Wispcar project

Files
-----

wispcar.asm........: PIC source code, compile and simulate 
                     with Windows MPLAB 8.10 (free download)
                     Also explains Wispcar commands
wispcar.sch........: gEDA gschem schematic
Makefile...........: Creates PDF of schematic
documentation.txt..: This file

Project Plan
------------

[ ] WP100 Documentation
    [ ] Create SVN repository
    [ ] Draw schematic
    [ ] Write Test Report
        + Discuss tests performed
        + how to repeat them
        + results
    [ ] Software
    [ ] Write Design Notes
        + explain various sections of design
        + discuss trade offs

[ ] WP200 Prototype Development
    [ ] Breadboard Prototype
        [X] PIC with RS232
        [X] Current sensor
            + high-side op-amp differential amp
        [X] Power Switch
            + used to switch power to AP
            + controlled by watchdog and sleep function
        [ ] Linear Regulator
        [X] Watchdog software
	[X] Sleep software
    [ ] Construct Soldered Prototype
    [ ] Install in Solar powered AP (Rowetel)
    
[ ] WP300 Testing
    [ ] Test to determine watchdog doesn't fire by mistake
        + leave running for 1 week
        + stable power & router
        + ensure watchdog doesn't fire by mistake        
    [ ] Dirty power test
        + work out a way to simulate a poor power supply
        + for example put power supply in series with transformer
          secondary, then modulate primary with pulses        
        + this will give big spikes on power line
        + make sure PIC never hangs       
    [ ] Brown out test
        + vary Vbat from 30V down to 2V 10 times
        + make sure PIC does not hang
        
Specs:
-----

1/ Measures Vbat and Ibat.

   Vbat between 5 and 60V
   Ibat between 0 and 5A

  Measures Vbat and Ibat and reports every 1 sec to Host.

2/ Watchdog

   Fires if no RS232 rx for TBD1 secs from host
   Power is shut off for 5 seconds then reapplied
   
3/ Sleep

   Send "sleepXXXX" to put power supply to sleep for XXXX seconds

4/ Current consumption (estimated)

   Vbat = 30V I=2mA
   Vbat = 5V  I=2mA

   Note: we need to work out a way to get 60V operation, 78L05
   regulator can't go above 35V.

References
----------

1/ Zener power supply design:

   http://www.kpsec.freeuk.com/powersup.htm

2/ PIC10F510 datasheet from Microchip

3/ 78L05 datasheet 

4/ IRF9540 datasheet

Credits
-------

Tim Ansell (Mithro) for lending me his PIC collection and programmer
Yahel Ben-David

Notes
-----

1/ IRF9640 FET was selected largely at random.  At 19A max it may be
overkill, a cheaper FET may be more suitable.

2/ The RS232 polarity may need to change when directly connected to a
router without level conversion, see reference docs for RS232 software
UART code in wispcar.asm.  I used a MAX232 type chip for interfacing
the RS232 tx & rx to a PC's serial port for testing.

Gotcha
------

Can only use 'call' to call an address in the first 256 bytes, so put
all funcs at the start of the program, main at the end.

TODO List
---------

[ ] schematic
    [ ] pinout of 78L05
    [ ] pinout of power FET
    [ ] pinout of BC548
    [ ] connect + & - together on unsued op-amp sections
    [ ] TAPR open harwdare license

[ ] svn repository
    + with datasheet pdfs ?
[ ] wire correctly for power on reset
    + test with dodgy power on curve (slow power up)
[ ] blog post
[ ] README in SVN
[ ] test with WRT54
[ ] add brown out detector to PIC reset to be double sure?
    + see PIC data sheet
[ ] check what happens in overvoltage on input, how can we protect?
[ ] document test plan
[X] make sure we can't stall in RS232 input routine
    + need a way to get around this.....
    + malformed RS323 could cause a hang
    + maybe better to just look at h/l transition or something?
    + sep pic for sleep function?
    + solution: integrate 1 sec delay with RS232 rx
[ ] Limitations
    + need to send full command before 1 second delay?
    + like send command immediately after ADC data
    + need automatic reset from fragment
    + like once every second
    + or can it be spread over cycles?
[ ] enable PIC watchdog timer
    + how can we test?
[ ] make sure all RS232 chars OK
    + how to prog with calibrated clock?
    + check baud rate
    + is max232 OK at Vcc=5V?
[ ] programming procedure to preserve osccal
[X] make function to print decimal, rather than repeating all that code
    + we can't as call stack is only two levels deep and we are at the limit

[ ] automatic thrash tests (repeat each one for hours/days)
    + maybe use expect
    [ ] send sleep
        + make sure we sleep
    [ ] send 'w'
        + make sure we dont WD time out
    [ ] check for unlikely WD/sleep/reboot events
        + especially under nasty conditions

[ ] check how accurate the timing is
    + is 1 sec delay accurate?

[ ] work out how to run from 60V
    + 78L05 pops at 35V

